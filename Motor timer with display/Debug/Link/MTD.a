;#include<mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include<delay.h>
;
;void main()
; 0000 0005 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0006 int ctr=0;
; 0000 0007 int z[]={0x3f, 0x06, 0x5b, 0x4f, 0x66, 0x6d, 0x7d, 0x07, 0x7f, 0x67};
; 0000 0008 PORTD=0b00000000;
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;	ctr -> R16,R17
;	z -> Y+0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0009 DDRD=0b11111111;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 000A PORTC=0b00000000;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 000B DDRC=0b01000001;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 000C PORTA=0b00000011;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 000D DDRA=0b00000000;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 000E PORTD=z[0];
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 000F while(1)
;PCODE: $00000024 VOL: 0
; 0000 0010 {
; 0000 0011 if((PINA.1==0) && (ctr<10))
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0012 {
; 0000 0013    while(PINA.1==0)
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0014    {}
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0015    ctr=ctr+1;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0016    PORTD=z[ctr];
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 0017 }
; 0000 0018 if(PINA.0==0)
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0019 {
; 0000 001A    while(ctr!=0)
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
; 0000 001B    {
; 0000 001C       PORTC.0=1;
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
; 0000 001D       PORTC.6=0;
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 001E       PORTD=z[ctr];
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 001F       delay_ms(1000);
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 0020       ctr=ctr-1;
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0021    }
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0022    PORTC.0=0;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0023    PORTC.6=0;
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
; 0000 0024    PORTD=z[0];
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0025 }
; 0000 0026 }
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0027 }
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
